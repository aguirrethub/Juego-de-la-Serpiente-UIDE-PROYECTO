
import pygame
import time
import random

# Inicializar Pygame
pygame.init()

# Crear la ventana del juego
ancho = 600
alto = 400
pantalla = pygame.display.set_mode((ancho, alto))
pygame.display.set_caption("Popular Juego de la Serpiente")

# Colores
blanco = (255, 255, 255)
negro = (0, 0, 0)
rojo = (213, 50, 80)
verde = (0, 255, 0)
azul = (50, 153, 213)

# Tamaño del bloque
tamano_bloque = 20
velocidad = 10

# Fuente
fuente = pygame.font.SysFont("bahnschrift",  25)
fuente_puntaje = pygame.font.SysFont("comicsansms", 30)

# Velocidad del reloj
reloj = pygame.time.Clock()

# Mostrar puntaje
def puntaje(score):
    valor = fuente_puntaje.render(f"PUNTAJE: {score}", True, azul)
    pantalla.blit(valor, [0, 0])

# Dibujar la serpiente
def nuestra_serpiente(tamano_bloque, lista_serpiente):
    for bloque in lista_serpiente:
        pygame.draw.rect(pantalla, verde, [bloque[0], bloque[1], tamano_bloque, tamano_bloque])


def mensaje(msg, color):
    texto = fuente.render(msg, True, color)
    pantalla.blit(texto, [ancho / 6, alto / 3])

# Funcion principal del juego
def juego():
    game_over = False
    game_close = False

# Posición inicial de la serpiente
    x1 = ancho / 2
    y1 = alto / 2

 # Cambios de posición
    x1_cambio = 0
    y1_cambio = 0

    lista_serpiente = []
    largo_serpiente = 1

# Comida
    comida_x = round(random.randrange(0, ancho - tamano_bloque) / 20.0) * 20.0
    comida_y = round(random.randrange(0, alto - tamano_bloque) / 20.0) * 20.0

  # Pantalla de Game Over
    while not game_over:

        while game_close:
            pantalla.fill(negro)
            mensaje("Perdiste! Presiona Q-Salir o C-Continuar", rojo)
            puntaje(largo_serpiente - 1)
            pygame.display.update()

# Eventos del Teclado para manjer la seleccion
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        juego()

 # Direccion de eventos durante el juego
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_cambio = -tamano_bloque
                    y1_cambio = 0
                elif event.key == pygame.K_RIGHT:
                    x1_cambio = tamano_bloque
                    y1_cambio = 0
                elif event.key == pygame.K_UP:
                    y1_cambio = -tamano_bloque
                    x1_cambio = 0
                elif event.key == pygame.K_DOWN:
                    y1_cambio = tamano_bloque
                    x1_cambio = 0

# Deteccion de coliciones si la serpiente toca los bordes de la pantalla
        if x1 >= ancho or x1 < 0 or y1 >= alto or y1 < 0:
            game_close = True

        x1 += x1_cambio
        y1 += y1_cambio
        pantalla.fill(negro)
        pygame.draw.rect(pantalla, rojo, [comida_x, comida_y, tamano_bloque, tamano_bloque])
        cabeza= []
        cabeza.append(x1)
        cabeza.append(y1)
        lista_serpiente.append(cabeza)
        if len(lista_serpiente) > largo_serpiente:
            del lista_serpiente[0]

# Deteccion de coliciones si la cabeza toca su propio cuerpo
        for bloque in lista_serpiente[:-1]:
            if bloque == cabeza:
                game_close = True

        nuestra_serpiente(tamano_bloque, lista_serpiente)
        puntaje(largo_serpiente - 1)

        pygame.display.update()

# Si la serpiete come la comida, aumenta el largo y reubica la comida
        if x1 == comida_x and y1 == comida_y:
            comida_x = round(random.randrange(0, ancho - tamano_bloque) / 20.0) * 20.0
            comida_y = round(random.randrange(0, alto - tamano_bloque) / 20.0) * 20.0
            largo_serpiente += 1

        reloj.tick(velocidad)

    pygame.quit()
    quit()


juego()

